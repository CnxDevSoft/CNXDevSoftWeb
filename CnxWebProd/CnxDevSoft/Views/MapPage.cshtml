@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    Layout = "Master.cshtml";
}

@section MenuScript{
	<script type="text/javascript"  src="/scripts/menu.js"></script>

    <script type="text/javascript"  src="/scripts/locationpicker.jquery.js"></script>
		
	   <style>
    .infoDiv {
    height: 200px;    
    width: 300px; 
    -webkit-user-select: none; 
    background-color: white; 
    color:black;
    }
</style>	
		
	<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true&sensor=true"></script>	
	
	<script type="text/javascript">

	    var markersArray = [];
	    jQuery(document).ready(function () {
	        Initialize();


	    });

	    function current_location() {
	        if (navigator.geolocation) {
	            navigator.geolocation.getCurrentPosition(function (position) {

	             
	                var myLat = position.coords.latitude;
	                var myLong = position.coords.longitude;

	             

	            }, function error(err) {
	                console.log('error: ' + err.message);
	                set_markers(new google.maps.LatLngBounds(), map);
	            });
	        } else {
	            alert("Geolocation is not supported by this browser.");
	        }
	    }


	    function set_current_location(map) {
	        if (navigator.geolocation) {
	            navigator.geolocation.getCurrentPosition(function (position) {

	                /*  var pos = new google.maps.LatLng(position.coords.latitude,
                                                       position.coords.longitude);*/
	       
	                var myLat = position.coords.latitude;
	                var myLong = position.coords.longitude;

	                var myLatlng = new google.maps.LatLng(myLat, myLong);
	                alert(myLatlng);
	                var marker2 = new google.maps.Marker({
	                    position: myLatlng,
	                    map: map,
	                    title: 'Your Mark',
	                    icon: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png',
	                });

	       
	            //    google.maps.event.addListener(marker2, 'dragend', function () { });
	              
	             /*   $('#map_canvas').locationpicker({
	                    location: { latitude: myLat, longitude: myLong },
	                    radius: 300,
	                    inputBinding: {
	                        latitudeInput: $('#us3-lat'),
	                        longitudeInput: $('#us3-lon'),
	                        radiusInput: $('#us3-radius'),
	                        locationNameInput: $('#us3-address')
	                    },
	                    enableAutocomplete: true,
	                    onchanged: function (currentLocation, radius, isMarkerDropped) {
	                       
	                    }
	                });*/




	                /*  add_location('My location',
                                  position.coords.latitude,
                                  position.coords.longitude);*/

	                /* set_markers(new google.maps.LatLngBounds(), map);*/
	            }, function error(err) {
	                console.log('error: ' + err.message);
	                set_markers(new google.maps.LatLngBounds(), map);
	            });
	        } else {
	            alert("Geolocation is not supported by this browser.");
	        }
	    }

	    function addMarker(location) {
	        /* marker = new google.maps.Marker({
                 position: location, map: map
             });*/
	        markersArray.push(location);
	    }
	    function deleteOverlays() {

	        if (markersArray) {
	            if (markersArray.length > 0) {

	                for (var i = 0; i < markersArray.length; i++) {
	                    markersArray[i].setMap(null);
	                }
	                markersArray.length = 0;
	            }

	        }
	    }
	    var initialLocation;
	    var CNX = new google.maps.LatLng(18.78658527032735, 98.98625046014786);
	    // Where all the fun happens 
	    function Initialize() {

	        // Google has tweaked their interface somewhat - this tells the api to use that new UI
	        google.maps.visualRefresh = true;

	      

	        // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show


	        var mapOptions = {
	            zoom: 14,
	         //   center: Liverpool,
	            mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP, draggable: true,
	        };

	        // This makes the div with id "map_canvas" a google map
	        var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

	        if (navigator.geolocation) {
	            browserSupportFlag = true;
	            navigator.geolocation.getCurrentPosition(function (position) {
	                initialLocation = new google.maps.LatLng(18.78658527032735, 98.98625046014786);
	                map.setCenter(initialLocation);
	            }, function () {
	                handleNoGeolocation(browserSupportFlag);
	            });
	        }

	       /* var Liverpool = new google.maps.LatLng(navigator.geolocation.position.coords.latitude, navigator.geolocation.position.coords.longitude);
	        map.setCenter(Liverpool);*/

	        
	        // This shows adding a simple pin "marker" - this happens to be the Tate Gallery in Liverpool!
	        var myLatlng = new google.maps.LatLng(18.7903893, 99.0057522);

	        /*  var marker = new google.maps.Marker({
                  position: myLatlng,
                  map: map,
                  title: 'Tate Gallery'
              });*/

	        // You can make markers different colors...  google it up!
	        //   marker.setIcon('http://maps.google.com/mapfiles/ms/icons/green-dot.png')

	        // a sample list of JSON encoded data of places to visit in Liverpool, UK
	        // you can either make up a JSON list server side, or call it from a controller using JSONResult


	        jQuery.ajax({
	            url: "/Umbraco/surface/Map/GetCurrentForumAsJson",
	            type: 'GET',
	            dataType: 'json',
	            contentType: "application/json",
	            data: { },
                success: function (realdata) {
               
                    data = realdata;
                    jQuery.each(data, function (i,item) {
                        var marker = new google.maps.Marker({
                            'position': new google.maps.LatLng(item.LocationLongitude, item.LocationLatitude),
                            'map': map,
                            'title': item.LocationName
                            //  icon:'http://maps.google.com/mapfiles/ms/icons/red-dot.png' 
                        });

                        // Make the marker-pin blue!
                        marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png')

                        // put in some information about each json object - in this case, the opening hours.
                        var infowindow = new google.maps.InfoWindow({
                            content: "<div class='infoDiv'><h2>" + item.LocationName + "</h2>" + "<div><h4 style='color:black'>Opening hours: " +

            item.LocationName + "</h4><h4 style='color:black'> Status: " +

            item.LocationName + "</h4><img src=" + item.LocationName + " /></div></div>"
                        });

                        // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!

                        //   set_current_location();
                        google.maps.event.addListener(marker, 'click', function () {
                            infowindow.open(map, marker);

                        });




                        var tempLat, tempLng;
                        google.maps.event.addListener(map, 'click', function (event) {

                            var myLatlng = new google.maps.LatLng(event.latLng.lat(), event.latLng.lng());
                            deleteOverlays();
                            var marker = new google.maps.Marker({
                                position: myLatlng,
                                map: map,
                                title: 'Your Mark',
                                icon: 'http://maps.google.com/mapfiles/ms/icons/red-dot.png', draggable: true,
                            });

                            addMarker(marker);
                            // alert('Lat: ' + event.latLng.lat() + ' Lng: ' + event.latLng.lng());
                            $("#LongText").val(event.latLng.lng());
                            $("#LatText").val(event.latLng.lat());
                            google.maps.event.addListener(marker, 'dragend', function (event) {
                                $("#LatText").val(event.latLng.lat());
                                $("#LongText").val(event.latLng.lng());


                                /*   var infowindow = new google.maps.InfoWindow({
                                       content: 'Latitude: ' + event.latLng.lat() + '<br>Longitude:'+ event.latLng.lng()
                                   });
                                   infowindow.open(map,marker);*/

                            });

                        });


                    })

                   // set_current_location(map);


                },
                error: function (jqXHR, textStatus, errorThrown) {
                    // alert("error: " + errorThrown);
                }
             });


	     /*   var data = [
                      {
                          "Id": 1, "PlaceName": "Test", "OpeningHours": "9-5, M-F", "status": "sale", "GeoLong": "18.796496", "GeoLat":

        "98.9838278"
                      },
                      {
                          "Id": 2, "PlaceName": "Merseyside Maritime Museum ", "OpeningHours": "9-1, M-F", "status": "sale", "GeoLong":

        "18.7903893", "GeoLat": "99.0057522", "imageCar": "http://maps.google.com/mapfiles/ms/icons/green-dot.png"
                      },

                    {
                        "Id": 3, "PlaceName": "Walker Art Gallery", "OpeningHours": "9-7, M-F", "status": "sale", "GeoLong": "18.7951784",

                        "GeoLat": "98.9781669"
                    }


       
	        ];*/

	        // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
	      

	        function handleNoGeolocation(errorFlag) {
	            if (errorFlag == true) {
	                alert("Geolocation service failed.");
	                initialLocation = CNX;
	            } else {
	                alert("Your browser doesn't support geolocation. We've placed you in Siberia.");
	                initialLocation = CNX;
	            }
	            map.setCenter(initialLocation);
	        }

	    }


</script>
}

@section TopMenu{
	
	<div class="content">
	<div class="header">
		<div class="wrap">
		      <header id="topnav">
			        <nav class="keep-nav-closed">
			        		 <ul>
			        		 	<li><a href="http://cnxdevsoft.com/#home">@Umbraco.GetDictionaryValue("Homepage")</a></li>
								<li><a title="CNX develop software" href="http://cnxdevsoft.com/#team">@Umbraco.GetDictionaryValue("OurServices")</a></li>
								@*<li><a title="CNX develop software" href="#ourstory" class="scroll">@Umbraco.GetDictionaryValue("Portfolio")</a></li>*@
								<li><a title="CNX develop software" href="http://cnxdevsoft.com/#blog">@Umbraco.GetDictionaryValue("AboutUs")</a></li>
								<li><a title="CNX develop software" href="http://cnxdevsoft.com/#contact">@Umbraco.GetDictionaryValue("ContactUS")</a></li>								
								<div class="clear"> </div>
							</ul>
		        	</nav>
			         <div id="Logo"><a href="/"><img alt="CNX develop software | ทีมพัฒนาเว็บ รับทำเว็บไซต์ ออกแบบเว็บไซด์ ราคาถูก เชียงใหม่" src="/images/logo3.png" title="CNX develop software | ทีมพัฒนาเว็บ รับทำเว็บไซต์ ออกแบบเว็บไซด์ ราคาถูก เชียงใหม่"></a></div>
			        	<a title="CNX develop software | ทีมพัฒนาเว็บ รับทำเว็บไซต์ ออกแบบเว็บไซด์ ราคาถูก เชียงใหม่" href="#" id="navbtn">Nav Menu</a>
			        <div class="clear"> </div>
		        </header>
		    </div>
		</div>
	</div><!--End content-->
}

@section MainContent{
			
						
	


<div class="wrapper">
     <div id="map_canvas" style="height: 300px;"> &nbsp;</div>	
    <div class="contentPage">
    <div>Member Name:  <input id="MemberName" value="" /></div>
    <div>Member Bike:  <input id="MemberBike" value="" /></div>



   <div>Location Name : <input id="LocationName" value="" /></div>
	<div><input id="LongText" value="" readonly/>	
    <input id="LatText" value="" readonly/>	</div>

</div></div>


}